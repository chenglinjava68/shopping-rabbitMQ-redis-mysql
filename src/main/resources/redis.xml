<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
	http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">

	<bean id="redisCommandsDao" class="org.workin.nosql.redis.dao.RedisCommandsDaoImpl" >
		<property name="redisTemplate" ref="redisTemplate" />
		<property name="repositoryManager" ref="repositoryManager" />
	</bean>

	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory" ref="jedisConnectionFactory"/>
		<!-- 全局的键值序列化器，都存字符串 -->
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
		<property name="valueSerializer">
			<bean class="org.springframework.data.redis.serializer.JdkSerializationRedisSerializer" />
		</property>
	</bean>


	<!-- <bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
    	<constructor-arg index="0" ref="sentinelConfig" />
  	</bean>

	<bean id="sentinelConfig" class="org.springframework.data.redis.connection.RedisSentinelConfiguration">
    	<constructor-arg name="master" value="redisMaster" />
    	<constructor-arg name="sentinelHostAndPorts">
		   	<set>
		        <value>${miao.redis.node1}</value>
		        <value>${miao.redis.node2}</value>
		        <value>${miao.redis.node3}</value>
		    </set>
    	</constructor-arg>
  	</bean> -->
   	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory">
        <property name="hostName" value="127.0.0.1" />
        <property name="port" value="6379" />
		<property name="password" value="" />
        <property name="timeout" value="30000" />
        <property name="database" value="0" />
        <property name="usePool" value="true" />
        <constructor-arg index="0" ref="jedisPoolConfig" />
	</bean>

	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
		<property name="maxTotal" value="100" />
        <property name="minIdle" value="10" />
        <property name="maxIdle" value="5" />
       	<property name="testOnBorrow" value="true" />
    </bean>

    <bean id="repositoryManager" class="org.workin.nosql.redis.RedisRepositoryManagerImpl">
		<property name="repositories">
			<map>
				<entry key="0" value-ref="userSession" />
				<entry key="1" value-ref="goods" />
			</map>
		</property>
	</bean>

	<bean id="userSession" class="org.workin.nosql.redis.RedisRepository">
		<property name="name" value="用户会话库" />
		<property name="expireTime" value="100000000" />
		<property name="timeUnit" value="ms" />
		<property name="keySerializer">
			<bean class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<bean id="goods" class="org.workin.nosql.redis.RedisRepository">
		<property name="name" value="用户会话库" />
		<property name="expireTime" value="100000000" />
		<property name="timeUnit" value="ms" />
		<property name="valueSerializer">
			<bean class="org.workin.nosql.redis.serializer.JacksonJsonRedisSerializer" >
				<constructor-arg type="java.lang.String" value="org.lee.vo.Goods" />
			</bean>
		</property>
	</bean>
</beans>